plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.dicedmelon.gradle.jacoco-android'
    id 'com.google.gms.google-services'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

def versionAppDev = '1.0'
def versionAppQa = '1.0'
def versionAppPreprod = '1.0'
def versionApp = '1.0'

def devPokeUrl = '\"https://pokeapi.co/api/v2/\"'
def qaPokeUrl = '\"https://pokeapi.co/api/v2/\"'
def prePokeUrl = '\"https://pokeapi.co/api/v2/\"'
def prodPokeUrl = '\"https://pokeapi.co/api/v2/\"'

def devLocation = '\"\"'
def qaLocation = '\"\"'
def preLocation = '\"\"'
def prodLocation = '\"\"'

android {
    compileSdk 34

    defaultConfig {
        applicationId "com.prueba"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "$versionApp"
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
        }
        release {
            debuggable false
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "version"
    productFlavors {
        dev {
            versionName "$versionAppDev-develop"
            resValue "string", "app_name", "\"Prueba (Dev)\""
            buildConfigField("String", "ENDPOINT", devPokeUrl)
            buildConfigField("String", "LOCATION_URL", devLocation)
        }
        qa {
            versionName "$versionAppQa-qa"
            resValue "string", "app_name", "\"Prueba (QA)\""
            buildConfigField("String", "ENDPOINT", qaPokeUrl)
            buildConfigField("String", "LOCATION_URL", qaLocation)
        }
        pre {
            versionName "$versionAppPreprod-pre"
            resValue "string", "app_name", "\"Prueba (PRE)\""
            buildConfigField("String", "ENDPOINT", prePokeUrl)
            buildConfigField("String", "LOCATION_URL", preLocation)
        }
        prod {
            versionName "$versionApp"
            resValue "string", "app_name", "\"Prueba\""
            buildConfigField("String", "ENDPOINT", prodPokeUrl)
            buildConfigField("String", "LOCATION_URL", prodLocation)
        }
    }

    packagingOptions {
        jniLibs {
            excludes += ['lib/armeabi-v7a/libavcodec_neon.so', 'lib/arm64-v8a/libavcodec_neon.so']
            pickFirsts += ['lib/x86/libc++_shared.so', 'lib/x86_64/libc++_shared.so', 'lib/armeabi-v7a/libc++_shared.so', 'lib/arm64-v8a/libc++_shared.so']
        }
        resources {
            excludes += ['META-INF/LICENSE', 'META-INF/LICENSE-FIREBASE.txt', 'META-INF/NOTICE', 'LICENSE.txt']
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def project = "Demo_"
            def flavor = variant.productFlavors[0].name
            def newApkName = project + flavor + "_" + versionApp + ".apk"
            outputFileName = new File(newApkName)
        }
    }

    testOptions {
        reportDir = "$project.buildDir/test-results"
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
                excludes = ['jdk.internal.*']
                jvmArgs '-noverify'
            }
        }
    }

    //FAD config
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    viewBinding {
        enabled = true
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
    namespace 'com.prueba'

    defaultConfig {
        multiDexEnabled true
    }

    buildFeatures {
        viewBinding true
    }

    lint {
        checkReleaseBuilds false
    }


}

androidExtensions {
    experimental = true
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    def lifecycle_version = "2.4.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    // Square and OkHttp dependencies
    def retrofit2_version = "2.6.2"
    def okhttp_version = "4.9.0"
    def retrofit2_adapter = "2.6.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"
    implementation "com.squareup.retrofit2:retrofit-converters:$retrofit2_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit2_adapter"

    //Room
    def room_version = "2.5.2"
    def persistence_version = "1.1.1"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-paging:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    implementation 'androidx.paging:paging-compose:3.3.0-alpha02'
    implementation "android.arch.persistence.room:rxjava2:$persistence_version"
    implementation "android.arch.persistence.room:runtime:$persistence_version"
    kapt "android.arch.persistence.room:compiler:$persistence_version"

    // Kotlin components
    def coroutines = '1.3.9'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"

    def vrxandroid = '2.1.1'
    implementation "io.reactivex.rxjava2:rxandroid:$vrxandroid"

    def vrxjava = '2.2.13'
    implementation "io.reactivex.rxjava2:rxjava:$vrxjava"

    def glide_version = "4.11.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

    def nav_version = "2.5.3"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    def dagger_version = "2.30.1"
    def dagger_and = "2.35.1"
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_and"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    //noinspection GradleCompatible
    def support_version = "28.0.0"
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support:support-annotations:$support_version"

    implementation group: 'org.bouncycastle', name: 'bcprov-jdk16', version: '1.46'

    implementation 'com.jakewharton.timber:timber:4.7.1'

    def multidex_version = "2.0.1"
    implementation "androidx.multidex:multidex:$multidex_version"

    //GEO
    implementation 'com.google.android.gms:play-services-location:21.0.1'

    //glide
    implementation 'com.github.bumptech.glide:glide:4.16.0'

    //lottie
    implementation 'com.airbnb.android:lottie:4.2.0'

    //color picker
    implementation 'com.github.duanhong169:colorpicker:1.1.6'

    //paging
    implementation 'androidx.paging:paging-runtime-ktx:3.3.0-alpha02'

    //firebase
    implementation platform('com.google.firebase:firebase-bom:32.3.1')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'

    //maps
    implementation 'com.google.android.gms:play-services-maps:18.1.0'


    //test
    def junit_version = "4.13.2"
    testImplementation "junit:junit:$junit_version"

    testImplementation 'org.robolectric:robolectric:4.5.1'

    def mockitoVersion = "4.7.0"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoVersion"
    testImplementation "org.mockito.kotlin:mockito-kotlin:3.2.0"
    testImplementation "org.testng:testng:7.5"
    testImplementation "org.assertj:assertj-core:3.23.1"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "androidx.navigation:navigation-testing:$nav_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"

    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
    androidTestImplementation "org.mockito:mockito-inline:$mockitoVersion"
    androidTestImplementation "org.mockito.kotlin:mockito-kotlin:3.2.0"
}